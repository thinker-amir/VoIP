
;Wrote these lines while building the images

[global]
type=global
; The default identifier order is ip,username,anonymous but for a PBX environment
; with lots of phones that register, identifying by ip address first is a waste of time.
; The order should be from the most likely to be used, to the least likely to be used
; which in this case would put username first for the phones, and ip second for providers.
endpoint_identifier_order=username,ip,anonymous


[system]
type=system
disable_tcp_switch=yes

; Sets the threadpool size at startup.
; Setting this higher can help Asterisk get through high startup loads
; such as when large numbers of phones are attempting to re-register or
; re-subscribe.
threadpool_initial_size=20
 
; When more threads are needed, how many should be created?
; Adding 5 at a time is probably safe.
threadpool_auto_increment=5
 
; Destroy idle threads after this timeout.
; Idle threads do have a memory overhead but it's slight as is the overhead of starting a new thread.
; However, starting and stopping threads frequently can cause memory fragmentation.  If the call volume
; is fairly consistent, this parameter is less important since threads will tend to get continuous
; activity.  In "spikey" situations, setting the timeout higher will decrease the probability
; of fragmentation.  Don't obsess over this setting.  Setting it to 2 minutes is probably safe
; for all PBX usage patterns.
threadpool_idle_timeout=120
 
; Set the maximum size of the pool.
; This is the most important settings.  Setting it too low will slow the transaction rate possibly
; causing timeouts on clients.  Setting it too high will use more memory, increase the chances of
; deadlocks and possibly cause other resources such as CPU and I/O to become exhausted.
; For a busy 8 core PBX, 100 is probably safe.  Setting this to 0 will allow the pool to grow
; as high as the system will allow.  This is probably not what you want. :)  Setting it to 500
; is also probably not what you want.  With that many threads, Asterisk will be thrashing and
; attempting to use more memory than can be allocated to a 32-bit process.  If memory starts
; increasing, lowering this value might actually help.
threadpool_max_size=100

; Timer t1 sets the timeout after which pjsip gives up on waiting for a response from
; the remote party.  The general rule is to set this to slightly higher than the round-trip
; time to the furthest remote party.  Although the default of 500ms is safe, this timer
; controls other timing aspects of the of the stack so reducing it is in your best interest.
; Unless you have a provider or remote phones with more than a 100ms RTT, setting this to
; 100ms (the minimum) is probably safe.  If you have outlier phones such as cell phones
; with VoIP clients, setting it to 250ms is probably safe.
timer_t1=100
 
; Timer B is technically the INVITE transaction timeout but it also controls other aspects
; of stack timing.  It's default is 32 seconds but its minimum is (64 * timer_t1) which
; would also be 32 seconds if timer_t1 were left at its default of 500ms.  Unfortunately,
; this timer has the side effect of controlling how long completed transactions are kept in
; memory so on a busy PBX, a setting of 32 seconds will probably result in higher than
; necessary memory utilization.  For most installations, 6400ms is fine.
timer_b=6400

[transport-tcp]
type=transport
protocol=tcp
bind=0.0.0.0:5060
allow_reload=yes

[transport-udp]
type=transport
protocol=udp
bind=0.0.0.0:5060
allow_reload=yes

[transport-tls]
type=transport
protocol=tls
bind=0.0.0.0:5061
allow_reload=yes
verify_client=no
verify_server=no
method=tlsv1

[transport-ws]
type=transport
protocol=ws
bind=0.0.0.0:5060
allow_reload=yes

[transport-wss]
type=transport
protocol=wss
bind=0.0.0.0:5061
allow_reload=yes